<!DOCTYPE html>
<html lang="en" dir="ltr">
<%- include('../../templates/header.ejs') %>

<head>
  <meta charset="UTF-8" />
  <title>Project</title>
</head>
<style>
  .about {
    height: auto;
  }

  .nmessage {
    font-size: 20px;
    text-align: center;
    margin-top: 20px;
  }
</style>

<div id="cookie"></div>

<!-- navgaition menu -->
<header>

  <nav>

    <div class="navbar">

      <div class="logo">

        <div class="image">
          <img src="https://mbktechstudio.com/Assets/Images/Icon/dg.svg" alt="" />
        </div>

        <div class="text">
          <a href="#">MBK Tech Studio</a>
        </div>

      </div>

      <ul class="menu">

        <div class="media-icons-m" id="media-icons-m"></div>

        <div class="cancel-btn">
          <i class="fas fa-times"></i>
        </div>

      </ul>

      <div class="media-icons" id="media-icons"></div>

    </div>

    <div class="menu-btn">
      <i class="fas fa-bars"></i>
    </div>

  </nav>

</header>

<body>
  <div class="scroll-button">
    <a href="#about"><i class="fas fa-arrow-up"></i></a>
  </div>
  <section class="about" id="about">
    <div class="content">

      <div class="title"><span>Projects</span></div>
      <div class="select-dropdown">
        <select id="categoryFilter" name="topics">
          <option value="all">All</option>
          <option value="cpp">Cpp Projects</option>
          <option value="game">Game Development</option>
          <option value="unity">Unity Assets</option>
          <option value="web">Web Development</option>
          <option value="py">Python Projects</option>
        </select>
      </div>
      <div class="search-bar">
        <input type="text" id="searchProduct" placeholder="Search Project By Name...">
        <div class="submit"><button type="submit"><i class="fas fa-search"></i></button></div>
        <button type="button" id="clearSearch" class="clear-btn"><i class="fas fa-times"></i></button>
      </div>

      <div class="products">
        <!-- Products will be dynamically inserted here -->
      </div>
    </div>
  </section>
  <%- include('../../templates/footer.ejs') %>

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.13/js/intlTelInput-jquery.min.js"></script>
  <script>
    let products = []; // Define products as a global variable

    const productsContainer = document.querySelector('.products');
    const searchInput = document.getElementById('searchProduct');
    const categoryFilter = document.getElementById('categoryFilter');

    // Function to fetch and use the products data
    async function loadProducts() {
      try {
        const response = await fetch('/Assets/projects.json'); // Update the path to your products.json file
        products = await response.json(); // Update the global products variable
        filterProducts(); // Call filterProducts to display the initial set of products
      } catch (error) {
        console.error('Error loading products:', error);
      }
    }

    function displayProducts(productsArray) {
      productsContainer.innerHTML = "";
      if (productsArray.length === 0) {
        productsContainer.innerHTML = '<p class="nmessage">Project not found</p>';
        return;
      }
      productsArray.forEach(product => {
        const productElement = document.createElement('div');
        productElement.classList.add('product');
        productElement.innerHTML = `
            <img src="${product.imageURL}" alt="${product.name}">
            <h3>${product.name}</h3>
            <p>${product.description}</p>
        `;
        productElement.addEventListener('click', () => {
          window.open(product.link, '_blank');
        });
        productsContainer.appendChild(productElement);
      });
    }

    function filterProducts() {
      const selectedCategory = categoryFilter.value;
      let filteredProducts = products;

      if (selectedCategory !== 'all') {
        filteredProducts = products.filter(product => product.category.includes(selectedCategory));
      }
      filteredProducts = searchProducts(filteredProducts);
      displayProducts(filteredProducts);
    }

    function searchProducts(productsArray) {
      const searchText = searchInput.value.toLowerCase();
      return productsArray.filter(product => product.name.toLowerCase().includes(searchText));
    }

    categoryFilter.addEventListener('change', filterProducts);
    searchInput.addEventListener('input', filterProducts);

    // Initial display of all products
    loadProducts();
  </script>
  <script>
    document.addEventListener("DOMContentLoaded", function() {

      // Get the hash from the URL (e.g., "#web" or "#cpp")
      const hash = window.location.hash.substring(1); // Remove the '#' symbol
      const categoryFilter = document.getElementById('categoryFilter');
      // If there is a hash in the URL, set the dropdown to the corresponding value
      if (hash) {
        categoryFilter.value = hash; // Set dropdown to the category from the URL hash
      }
      // Always trigger filtering based on the current dropdown value
      filterProducts();

      const searchInput = document.getElementById('searchProduct');
      const clearBtn = document.getElementById('clearSearch');

      // Show clear button when there is input
      searchInput.addEventListener('input', function() {
        if (this.value.length > 0) {
          clearBtn.style.display = 'block';
        } else {
          clearBtn.style.display = 'none';
        }
      });

      // Clear input when clear button is clicked
      clearBtn.addEventListener('click', function() {
        searchInput.value = '';
        clearBtn.style.display = 'none';
        filterProducts(); // Optionally trigger the filter function to show all products again
      });
    });
  </script>
</body>

</html>
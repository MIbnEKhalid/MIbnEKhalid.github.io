<!DOCTYPE html>
<html lang="en" dir="ltr">
{{> header homePath="/"}}

<head>
  <title>FAQs</title>
  <meta charset="UTF-8" />
  <meta name="description" content="Find answers to common questions about MBK Tech Studio's services, projects, and support. Contact us for more information." />
  <meta name="keywords" content="FAQs, Frequently Asked Questions, MBK Tech Studio, Help Center" />
  <meta property="og:title" content="FAQs | MBK Tech Studio" />
  <meta property="og:description" content="Find answers to common questions about MBK Tech Studio's services, projects, and support. Contact us for more information." />
  <meta property="og:image" content="https://www.mbktechstudio.com/Assets/Images/Icon/logo.png" />
  <meta property="og:url" content="https://www.mbktechstudio.com/FAQs" />
  <meta property="og:type" content="website" />
  <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "FAQPage",
      "name": "FAQs | MBK Tech Studio",
      "logo": "https://www.mbktechstudio.com/Assets/Images/Icon/logo.png",
      "url": "https://www.mbktechstudio.com/FAQs",
      "description": "Find answers to common questions about MBK Tech Studio's services, projects, and support."
    }
  </script>
  <meta name="description" content="Frequently Asked Questions">
  <link rel="stylesheet" href="/Assets/Style/main.css">
  <link rel="stylesheet" href="/Assets/Style/FAQs.css">
  <script src="/Assets/Scripts/config.js"></script>
  <style>
    .about {
      height: auto !important;
      display: block !important;
    }

    /* Global Styles */
    body {
      font-size: 16px;
      line-height: 1.6;
      color: #333;
      font-family: 'Open Sans', sans-serif;
      margin: 0;
      padding: 0;
      scroll-behavior: smooth;
    }


    /* Headings (H1, H2, H3) */
    h1,
    h2,
    h3 {
      font-family: 'Lato', sans-serif;
      font-weight: 700;
      /* Bold for emphasis */
      color: #222;
      /* Slightly darker for contrast */
      margin-bottom: 20px;
    }

    /* Subheadings or Secondary Text */
    h4,
    h5,
    h6 {
      font-family: 'Lato', sans-serif;
      font-weight: 400;
      color: #555;
      margin-bottom: 15px;
    }

    /* Links */
    .link {
      font-family: 'Open Sans', sans-serif;
      color: #007bff;
      text-decoration: none;
    }

    /* FAQ Section Example */
    .faq-question {
      font-family: 'Lato', sans-serif;
      font-size: 20px;
      font-weight: 800;
      cursor: pointer;
      color: #0056b3;
    }

    .faq-answer {
      font-family: 'Open Sans', sans-serif;
      font-size: 15px;
      line-height: 1.6;
      color: #444;
    }

    @media (max-width: 768px) {
      .faq-question {
        font-size: 16px;
      }

      .faq-answer {
        font-size: 14px;
      }
    }




    .faq-question,
    .faq-answer,
    .faq-item.active .faq-answer,
    .faq-item,
    .faq-question::after {
      background-color: #1f1e1e;
      color: #ffffff;
    }

    .faq-item {
      border: 1px solid #333;
    }

    .faq-item h3 {
      color: #fff;
    }

    .faq-question:hover,
    .faq-question:hover::after {
      background: #377a77;
      background-color: #377a77;
      color: #fff;
      transition: all 0.4s ease;
    }
  </style>
</head>

<body>

  <!-- Move to top button -->
  <div class="scroll-button">
    <a href="#."><i class="fas fa-arrow-up"></i></a>
  </div>

  <!-- FAQ Section -->
  <section class="about" id=".">
    <br>
    <div class="title"><span>Frequently Asked Questions</span></div>

    <div class="faq-container" id="faq-container"></div>

    <!-- Under Development Box -->
    <div class="RedboxInfo">
      Notice: This Page Is Under Development. Information May Not Be Accurate.
    </div>

  </section>


    {{> footer }}
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      fetch('/Assets/FAQs/faq.json')
        .then(response => response.json())
        .then(data => {
          const faqContainer = document.getElementById('faq-container');
          // Get the query parameter value for 'Q'
          const urlParams = new URLSearchParams(window.location.search);
          const queryId = urlParams.get('Q'); // Extracts the 'Q' parameter
          let scrollToFaq = null;
          // Render FAQs
          data.forEach(item => {
            // Check if item.display is true
            const validDisplayValues = [
              "true", "True", "1", "Yes", "yes", "Y", "y"
            ];
            if (validDisplayValues.includes(item.display)) {
              const faqItem = document.createElement('div');
              faqItem.classList.add('faq-item');
              const faqQuestion = document.createElement('div');
              faqQuestion.classList.add('faq-question');
              faqQuestion.id = item.id; // Set ID for matching
              faqQuestion.innerHTML = item.question;
              const faqAnswer = document.createElement('div');
              faqAnswer.classList.add('faq-answer');
              // Capitalize text outside <a> tags
              const capitalizedAnswer = item.answer.replace(/(<a\b[^>]*>.*?<\/a>)|(\b\w)/g, (match, anchor, word) => {
                return anchor ? anchor : word.toUpperCase(); // Skip <a> content, capitalize other words
              });
              faqAnswer.innerHTML = `<div style='padding: 10px;'>${capitalizedAnswer}</div>`;
              faqItem.appendChild(faqQuestion);
              faqItem.appendChild(faqAnswer);
              faqContainer.appendChild(faqItem);
              // Check if this FAQ matches the query parameter
              if (item.id === queryId) {
                faqItem.classList.add('active'); // Open the matching FAQ
                scrollToFaq = faqItem; // Store reference to scroll later
              }
            }
          });
          // Scroll to the matched FAQ if found
          if (scrollToFaq) {
            const headerOffset = document.querySelector('header').offsetHeight || 0; // Get header height
            const elementPosition = scrollToFaq.getBoundingClientRect().top + window.scrollY;
            const offsetPosition = elementPosition - headerOffset - 100; // Adjust by header height and add extra spacing
            window.scrollTo({
              top: offsetPosition,
              behavior: 'smooth'
            });
            setTimeout(function() {
              const url = new URL(window.location);
              url.search = ''; // Remove query parameters
              window.history.replaceState({}, document.title, url);
              console.log("url");
            }, 500);
          }
          // FAQ Item Toggle
          document.querySelectorAll('.faq-question').forEach(item => {
            item.addEventListener('click', function() {
              const faqItem = this.parentNode;
              faqItem.classList.toggle('active');
            });
          });
        })
        .catch(error => console.error('Error fetching FAQ data:', error));
    });
  </script>

</body>

</html>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Ticket</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            padding: 0;
        }
        .form-group {
            margin-bottom: 20px;
        }
        label {
            font-weight: bold;
            display: block;
            margin-bottom: 5px;
        }
        input, textarea, button {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }
        button {
            background-color: #007bff;
            color: #fff;
            border: none;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
        .audit-trail-entry {
            display: flex;
            gap: 10px;
            margin-bottom: 10px;
        }
        .audit-trail-entry input {
            flex: 1;
        }
        .add-audit-button {
            margin-top: 10px;
            background-color: #28a745;
        }
        .add-audit-button:hover {
            background-color: #218838;
        }
    </style>
</head>
<body>
    <h1>Edit Ticket</h1>
    <div class="form-group">
        <label for="ticketno">Enter Ticket Number:</label>
        <input type="text" id="ticketno" placeholder="Enter ticket number">
        <button id="fetch-ticket">Fetch Ticket</button>
    </div>

    <div id="ticket-form" style="display: none;">
        <div class="form-group">
            <label for="status">Status:</label>
            <input type="text" id="status">
        </div>
        <div class="form-group">
            <label for="lastUpdated">Last Updated:</label>
            <input type="datetime-local" id="lastUpdated">
        </div>
        <div class="form-group">
            <label>Audit Trail:</label>
            <div id="auditTrail"></div>
            <button id="add-audit" class="add-audit-button">Add Audit Entry</button>
        </div>
        <button id="update-ticket">Update Ticket</button>
    </div>

    <script >   
    // Fetch ticket details and display them in the form
document.getElementById("fetch-ticket").addEventListener("click", async () => {
    const ticketno = document.getElementById("ticketno").value;

    if (!ticketno) {
        alert("Please enter a ticket number.");
        return;
    }

    try {
        const response = await fetch(`/api/get-ticket/${ticketno}`);
        if (!response.ok) {
            throw new Error("Ticket not found.");
        }

        const ticket = await response.json();

        // Populate form fields
        document.getElementById("status").value = ticket.status;
        populateAuditTrail(ticket.auditTrail || []);
        updateLastUpdated(); // Set Last Updated to latest audit trail timestamp

        // Show the form
        document.getElementById("ticket-form").style.display = "block";
    } catch (err) {
        alert(err.message);
    }
});

// Populate the audit trail entries
function populateAuditTrail(auditTrail) {
    const auditTrailContainer = document.getElementById("auditTrail");
    auditTrailContainer.innerHTML = ""; // Clear existing entries

    auditTrail.forEach((entry, index) => {
        addAuditEntry(entry, index);
    });

    updateLastUpdated(); // Update the Last Updated field
}

// Add a single audit trail entry row
function addAuditEntry(entry = { type: "", action: "", timestamp: "" }, index = null) {
    const container = document.createElement("div");
    container.className = "audit-trail-entry";

    container.innerHTML = `
        <input type="text" placeholder="Type" value="${entry.type}" data-index="${index}" class="type">
        <input type="text" placeholder="Action" value="${entry.action}" data-index="${index}" class="action">
        <input type="datetime-local" placeholder="Timestamp" value="${entry.timestamp}" data-index="${index}" class="timestamp">
    `;

    document.getElementById("auditTrail").appendChild(container);

    // Attach an event listener to update the Last Updated field whenever a timestamp changes
    container.querySelector(".timestamp").addEventListener("change", updateLastUpdated);
}

// Add a new audit trail entry
document.getElementById("add-audit").addEventListener("click", () => {
    addAuditEntry();
    updateLastUpdated(); // Update the Last Updated field after adding a new entry
});

// Update ticket details
document.getElementById("update-ticket").addEventListener("click", async () => {
    const ticketno = document.getElementById("ticketno").value;
    const status = document.getElementById("status").value;
    const lastUpdated = document.getElementById("lastUpdated").value;

    const auditTrail = Array.from(document.querySelectorAll(".audit-trail-entry")).map((entry) => {
        return {
            type: entry.querySelector(".type").value,
            action: entry.querySelector(".action").value,
            timestamp: entry.querySelector(".timestamp").value,
        };
    });

    try {
        const response = await fetch("/api/update-ticket", {
            method: "PUT",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ ticketno, status, lastUpdated, auditTrail }),
        });

        if (!response.ok) {
            throw new Error("Failed to update ticket.");
        }

        alert("Ticket updated successfully!");
    } catch (err) {
        alert(err.message);
    }
});

function updateLastUpdated() {
    const timestamps = Array.from(document.querySelectorAll(".timestamp"))
        .map((input) => input.value)
        .filter(Boolean); // Filter out empty timestamps

    if (timestamps.length > 0) {
        const latestTimestamp = new Date(Math.max(...timestamps.map((ts) => new Date(ts))));

        // Adjust to local time for the datetime-local input
        const localTimestamp = new Date(latestTimestamp.getTime() - latestTimestamp.getTimezoneOffset() * 60000);
        document.getElementById("lastUpdated").value = localTimestamp.toISOString().slice(0, 16); // Format as 'YYYY-MM-DDTHH:mm'
    }
}


        </script>
</body>
</html>
